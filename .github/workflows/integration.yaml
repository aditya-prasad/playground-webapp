name: integration

on:
  push:
    branches:
      - develop

env:
  NAME: playground-webapp
  IMAGE: gcr.io/okcredit-42/playground-webapp
  DEPLOY_REPO: okcredit/STAGING
  DEPLOY_ROOT: apps/web/playground-webapp

jobs:
  #  publish_docker_image:
  #    name: Publish docker image
  #    runs-on: ubuntu-latest
  #    outputs:
  #      tag: ${{ steps.build_image.outputs.tag }}
  #      tag_sha: ${{ steps.build_image.outputs.tag_sha }}
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #
  #      - name: Setup gcloud
  #        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #        with:
  #          service_account_key: ${{ secrets.GCP_SA_KEY }}
  #          export_default_credentials: true
  #
  #      - name: Login to docker registry
  #        run: gcloud auth configure-docker --quiet
  #
  #      - name: Build image
  #        id: build_image
  #        run: |
  #          COMMIT=${GITHUB_SHA:0:7}
  #          TAG=develop
  #          TAG_SHA=sha-$COMMIT
  #          docker build -t $IMAGE:$TAG -t $IMAGE:$TAG_SHA .
  #
  #          # outputs
  #          echo "::set-output name=tag::$TAG"
  #          echo "::set-output name=tag_sha::$TAG_SHA"
  #
  #      - name: Push image
  #        run: docker push $IMAGE

  deploy_on_staging:
    name: Deploy on STAGING
    runs-on: ubuntu-latest
    #    needs:
    #      - publish_docker_image
    steps:
      - name: Checkout doployment code
        uses: actions/checkout@v2
        with:
          repository: ${{ env.DEPLOY_REPO }}
          token: ${{ secrets.X_GITHUB_PERSONAL_ACCESS_TOKEN }}
          ref: master

      - name: Bump version
        uses: mikefarah/yq@3.3.0
        with:
          cmd: cd ${{ env.DEPLOY_ROOT }} && pwd && ls -la && bump_version.sh develop

#      - name: Setup gcloud
#        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#        with:
#          service_account_key: ${{ secrets.GCP_SA_KEY }}
#          export_default_credentials: true
#
#      - name: Connect to cluster
#        run: |
#          curl -sfL https://direnv.net/install.sh | bash
#          echo 'eval "$(direnv hook bash)"' >> $HOME/.bashrc
#          source $HOME/.bashrc
#          ./setup.sh
#          echo "::set-env name=KUBECONFIG::$(pwd)/kubeconfig.yaml"
#
#      - name: Test
#        run: |
#          cat .envrc
#          direnv allow .
#          echo $KUBECONFIG
#          echo $GITHUB_WORKSPACE
#          pwd
#          ls
#          cd $DEPLOY_ROOT
#          ls
#          kubectl get deploy,svc,vs
#          yq r -d'*' src/manifests/*.yaml "spec.template.spec.containers.(name==playground-webapp).image"
